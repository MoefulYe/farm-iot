// Code generated by ent, DO NOT EDIT.

package balance

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the balance type in the database.
	Label = "balance"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldWhen holds the string denoting the when field in the database.
	FieldWhen = "when"
	// FieldBalance holds the string denoting the balance field in the database.
	FieldBalance = "balance"
	// Table holds the table name of the balance in the database.
	Table = "balances"
)

// Columns holds all SQL columns for balance fields.
var Columns = []string{
	FieldID,
	FieldWhen,
	FieldBalance,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultWhen holds the default value on creation for the "when" field.
	DefaultWhen func() time.Time
)

// OrderOption defines the ordering options for the Balance queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByWhen orders the results by the when field.
func ByWhen(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWhen, opts...).ToFunc()
}

// ByBalance orders the results by the balance field.
func ByBalance(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBalance, opts...).ToFunc()
}
