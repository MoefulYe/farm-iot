// Code generated by ent, DO NOT EDIT.

package device

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the device type in the database.
	Label = "device"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBornAt holds the string denoting the born_at field in the database.
	FieldBornAt = "born_at"
	// FieldHashedPasswd holds the string denoting the hashed_passwd field in the database.
	FieldHashedPasswd = "hashed_passwd"
	// FieldDeadAt holds the string denoting the dead_at field in the database.
	FieldDeadAt = "dead_at"
	// FieldReason holds the string denoting the reason field in the database.
	FieldReason = "reason"
	// Table holds the table name of the device in the database.
	Table = "devices"
)

// Columns holds all SQL columns for device fields.
var Columns = []string{
	FieldID,
	FieldBornAt,
	FieldHashedPasswd,
	FieldDeadAt,
	FieldReason,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Device queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByBornAt orders the results by the born_at field.
func ByBornAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBornAt, opts...).ToFunc()
}

// ByHashedPasswd orders the results by the hashed_passwd field.
func ByHashedPasswd(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldHashedPasswd, opts...).ToFunc()
}

// ByDeadAt orders the results by the dead_at field.
func ByDeadAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeadAt, opts...).ToFunc()
}

// ByReason orders the results by the reason field.
func ByReason(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReason, opts...).ToFunc()
}
