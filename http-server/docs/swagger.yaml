basePath: /api
definitions:
  models.CowInfo:
    properties:
      born_at:
        type: string
      dead_at:
        type: string
      id:
        type: string
      parent:
        type: string
      reason:
        type: string
    type: object
  models.HeartBeat:
    properties:
      health:
        type: number
      id:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      time:
        type: string
      weight:
        type: number
    type: object
  models.KillCowReq:
    properties:
      cows:
        items:
          type: string
        type: array
    type: object
  models.LoginReq:
    properties:
      passwd:
        type: string
      username:
        type: string
    type: object
  models.Msg:
    properties:
      code:
        type: integer
      msg:
        type: string
    type: object
  models.Paged-models_CowInfo:
    properties:
      cnt:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.CowInfo'
        type: array
    type: object
  models.RegisterReq:
    properties:
      passwd:
        type: string
      username:
        type: string
    type: object
  models.Resp-Paged[models_CowInfo]:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.Paged-models_CowInfo'
      msg:
        type: string
    type: object
  models.Resp-array_float64:
    properties:
      code:
        type: integer
      data:
        items:
          type: number
        type: array
      msg:
        type: string
    type: object
  models.Resp-array_models_CowInfo:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.CowInfo'
        type: array
      msg:
        type: string
    type: object
  models.Resp-array_models_HeartBeat:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.HeartBeat'
        type: array
      msg:
        type: string
    type: object
  models.Resp-models_CowInfo:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.CowInfo'
      msg:
        type: string
    type: object
  models.Resp-models_Token:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.Token'
      msg:
        type: string
    type: object
  models.Token:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /balance:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: from
        type: string
      - in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-array_float64'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: get balance
      tags:
      - balance
  /cow:
    get:
      consumes:
      - application/json
      parameters:
      - description: jwt
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        maximum: 40
        minimum: 0
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-Paged[models_CowInfo]'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: get cow info
      tags:
      - cow
  /cow/{uuid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: jwt
        in: header
        name: Authorization
        required: true
        type: string
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-models_CowInfo'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: get cow info by uuid
      tags:
      - cow
  /cow/heartbeat:
    get:
      consumes:
      - application/json
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - in: query
        name: fields
        type: string
      - in: query
        name: start
        type: string
      - in: query
        name: stop
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-array_models_HeartBeat'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: get heartbeat
      tags:
      - heartbeat
  /cow/heartbeat/{uuid}:
    get:
      consumes:
      - application/json
      parameters:
      - description: jwt
        in: header
        name: Authorization
        required: true
        type: string
      - description: uuid
        in: path
        name: uuid
        required: true
        type: string
      - in: query
        name: fields
        type: string
      - in: query
        name: start
        type: string
      - in: query
        name: stop
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-array_models_CowInfo'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: heartbeat by uuid
      tags:
      - heartbeat
  /cow/kill:
    post:
      consumes:
      - application/json
      parameters:
      - description: jwt
        in: header
        name: Authorization
        required: true
        type: string
      - description: uuids
        in: body
        name: cows
        required: true
        schema:
          $ref: '#/definitions/models.KillCowReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Msg'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: Kill cow
      tags:
      - cow
  /cow/spawn:
    post:
      consumes:
      - application/json
      parameters:
      - description: jwt
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Msg'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      security:
      - ApiKeyAuth: []
      summary: spawn cow
      tags:
      - cow
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: 账号和密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-models_Token'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      tags:
      - login
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户名和密码
        in: body
        name: body-params
        required: true
        schema:
          $ref: '#/definitions/models.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/models.Resp-models_Token'
        "400":
          description: failure
          schema:
            $ref: '#/definitions/models.Msg'
      tags:
      - register
swagger: "2.0"
