// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cow": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getInfo"
                ],
                "summary": "get all info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 40,
                        "minimum": 0,
                        "type": "integer",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Resp-Paged[models_DeviceInfo]"
                        }
                    },
                    "400": {
                        "description": "failure",
                        "schema": {
                            "$ref": "#/definitions/models.Msg"
                        }
                    }
                }
            }
        },
        "/cow/keep-alive": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keep-alive"
                ],
                "summary": "keepalive",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "stop",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Resp-array_models_KeepAlive"
                        }
                    },
                    "400": {
                        "description": "failure",
                        "schema": {
                            "$ref": "#/definitions/models.Msg"
                        }
                    }
                }
            }
        },
        "/cow/keep-alive/{uuid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keep-alive"
                ],
                "summary": "keepalive by uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "stop",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Resp-array_models_DeviceInfo"
                        }
                    },
                    "400": {
                        "description": "failure",
                        "schema": {
                            "$ref": "#/definitions/models.Msg"
                        }
                    }
                }
            }
        },
        "/cow/{uuid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "getInfo"
                ],
                "summary": "get uuid info by uuid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwt",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "uuid",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Resp-models_DeviceInfo"
                        }
                    },
                    "400": {
                        "description": "failure",
                        "schema": {
                            "$ref": "#/definitions/models.Msg"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "parameters": [
                    {
                        "description": "账号和密码",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Resp-models_Token"
                        }
                    },
                    "400": {
                        "description": "failure",
                        "schema": {
                            "$ref": "#/definitions/models.Msg"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "register"
                ],
                "parameters": [
                    {
                        "description": "用户名和密码",
                        "name": "body-params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/models.Resp-models_Token"
                        }
                    },
                    "400": {
                        "description": "failure",
                        "schema": {
                            "$ref": "#/definitions/models.Msg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DeviceInfo": {
            "type": "object",
            "properties": {
                "born_at": {
                    "type": "string"
                },
                "dead_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                }
            }
        },
        "models.KeepAlive": {
            "type": "object",
            "properties": {
                "health": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "time": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "models.LoginReq": {
            "type": "object",
            "properties": {
                "passwd": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Msg": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Paged-models_DeviceInfo": {
            "type": "object",
            "properties": {
                "cnt": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeviceInfo"
                    }
                }
            }
        },
        "models.RegisterReq": {
            "type": "object",
            "properties": {
                "passwd": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Resp-Paged[models_DeviceInfo]": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Paged-models_DeviceInfo"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Resp-array_models_DeviceInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeviceInfo"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Resp-array_models_KeepAlive": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KeepAlive"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Resp-models_DeviceInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.DeviceInfo"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Resp-models_Token": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Token"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
